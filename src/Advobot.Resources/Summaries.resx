<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CreateRoleRestrictedChannel" xml:space="preserve">
    <value>Creates a voice channel and a role which restricts access to that voice channel.</value>
  </data>
  <data name="AssignSelfRole" xml:space="preserve">
    <value>Gives or takes a role depending on if the user already has it. Removes all other roles in the same group unless the group is 0.</value>
  </data>
  <data name="Ban" xml:space="preserve">
    <value>Bans the user from the guild.</value>
  </data>
  <data name="Bump" xml:space="preserve">
    <value>Bumps the invite on the guild.</value>
  </data>
  <data name="ClearChannelPerms" xml:space="preserve">
    <value>Clears the permission overwrites from a channel.</value>
  </data>
  <data name="ClearRolePerms" xml:space="preserve">
    <value>Removes all permissions from a role.</value>
  </data>
  <data name="Commands" xml:space="preserve">
    <value>Displays the names and categories of commands.</value>
  </data>
  <data name="CopyChannelPerms" xml:space="preserve">
    <value>Copies the permissions overwrites from one channel to another.</value>
  </data>
  <data name="CopyRolePerms" xml:space="preserve">
    <value>Copies the permissions from one role to another.</value>
  </data>
  <data name="CreateChannel" xml:space="preserve">
    <value>Creates a channel.</value>
  </data>
  <data name="CreateEmote" xml:space="preserve">
    <value>Creates an emote.</value>
  </data>
  <data name="CreateGuild" xml:space="preserve">
    <value>Creates a guild with the bot as owner.</value>
  </data>
  <data name="CreateInvite" xml:space="preserve">
    <value>Creates an invite.</value>
  </data>
  <data name="CreateRole" xml:space="preserve">
    <value>Creates a role.</value>
  </data>
  <data name="CreateWebhook" xml:space="preserve">
    <value>Creates a webhook for the guild.</value>
  </data>
  <data name="CreateWebhookChannel" xml:space="preserve">
    <value>The text channel to create a webhook on.</value>
  </data>
  <data name="CreateWebhookName" xml:space="preserve">
    <value>The name to give the webhook.</value>
  </data>
  <data name="Deafen" xml:space="preserve">
    <value>Prevents a user from hearing in voice chat.</value>
  </data>
  <data name="DeleteChannel" xml:space="preserve">
    <value>Deletes a channel.</value>
  </data>
  <data name="DeleteEmote" xml:space="preserve">
    <value>Deletes an emote.</value>
  </data>
  <data name="DeleteGuild" xml:space="preserve">
    <value>If the bot is the current owner of the guild, this command will delete the guild.</value>
  </data>
  <data name="DeleteInvite" xml:space="preserve">
    <value>Deletes an invite.</value>
  </data>
  <data name="DeleteMultipleInvites" xml:space="preserve">
    <value>Deletes multiple invites matching specified criteria.</value>
  </data>
  <data name="DeleteRole" xml:space="preserve">
    <value>Deletes a role.</value>
  </data>
  <data name="DeleteWebhook" xml:space="preserve">
    <value>Deletes a webhook from the guild.</value>
  </data>
  <data name="DeleteWebhookWebhook" xml:space="preserve">
    <value>The webhook to delete.</value>
  </data>
  <data name="DisconnectBot" xml:space="preserve">
    <value>Turns the bot off.</value>
  </data>
  <data name="DisplayBannedPhrases" xml:space="preserve">
    <value>Displays all of the banned phrases in this guild.</value>
  </data>
  <data name="DisplayChannelPerms" xml:space="preserve">
    <value>Displays the permission overwrites on a channel.</value>
  </data>
  <data name="DisplayChannelPosition" xml:space="preserve">
    <value>Displays the positions of each channel.</value>
  </data>
  <data name="DisplayCurrentBanList" xml:space="preserve">
    <value>Displays all the bans on the guild.</value>
  </data>
  <data name="DisplayEmotes" xml:space="preserve">
    <value>Displays all the emotes matching a specified criteria.</value>
  </data>
  <data name="DisplayInvites" xml:space="preserve">
    <value>Displays all the invites.</value>
  </data>
  <data name="DisplayRolePerms" xml:space="preserve">
    <value>Displays the permissions </value>
  </data>
  <data name="DisplayRolePositions" xml:space="preserve">
    <value>Displays the positions of each role.</value>
  </data>
  <data name="DisplaySelfRoles" xml:space="preserve">
    <value>Displays the groups and roles which can be self assigned.</value>
  </data>
  <data name="DisplayWebhooks" xml:space="preserve">
    <value>Lists all the webhooks on the guild or the specified channel.</value>
  </data>
  <data name="DisplayWebhooksChannel" xml:space="preserve">
    <value>The channel to get webhooks from.</value>
  </data>
  <data name="ForAllWithRole" xml:space="preserve">
    <value>Does an action on many users at once.</value>
  </data>
  <data name="GenericChannelArgument" xml:space="preserve">
    <value>A channel on the guild which you can see.</value>
  </data>
  <data name="Get" xml:space="preserve">
    <value>Gets an invite meeting the given criteria.</value>
  </data>
  <data name="GetBanReason" xml:space="preserve">
    <value>Lists the given reason for a user being banned.</value>
  </data>
  <data name="GetEnumNames" xml:space="preserve">
    <value>Displays all the value of an enum.</value>
  </data>
  <data name="GetGuilds" xml:space="preserve">
    <value>Displays the guilds the bot is in.</value>
  </data>
  <data name="GetInfo" xml:space="preserve">
    <value>Shows information about specified things.</value>
  </data>
  <data name="GetMessages" xml:space="preserve">
    <value>Downloads the past specified amount of messages.</value>
  </data>
  <data name="GetPermNamesFromValue" xml:space="preserve">
    <value>Displays all the permissions that come from a specified value.</value>
  </data>
  <data name="GetUserAvatar" xml:space="preserve">
    <value>Displays the url for a user's avatar.</value>
  </data>
  <data name="GetUserJoinedAt" xml:space="preserve">
    <value>Shows the user which joined the guild at a specified position.</value>
  </data>
  <data name="GetUserJoinList" xml:space="preserve">
    <value>Displays the users in the guild and the order they have joined.</value>
  </data>
  <data name="GetUsersWithReason" xml:space="preserve">
    <value>Finds users matching some criteria.</value>
  </data>
  <data name="GiveRole" xml:space="preserve">
    <value>Gives roles to a user.</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Displays information about commands.</value>
  </data>
  <data name="HelpCommandHelp" xml:space="preserve">
    <value>Prints out help information for a specific command in a specified module.</value>
  </data>
  <data name="HelpGeneralHelp" xml:space="preserve">
    <value>Prints out general help information for the bot.</value>
  </data>
  <data name="HelpModuleHelp" xml:space="preserve">
    <value>Prints out help information for a module.</value>
  </data>
  <data name="HelpVariableCommand" xml:space="preserve">
    <value>The name of a command. This does not need to be exact; commands with similar names will be found.</value>
  </data>
  <data name="HelpVariableCommandPosition" xml:space="preserve">
    <value>The number of a command overload.</value>
  </data>
  <data name="HelpVariableExactCommand" xml:space="preserve">
    <value>The name of a command. This does need to be the exact name of a command and in quotes.</value>
  </data>
  <data name="Kick" xml:space="preserve">
    <value>Removed a user from the guild.</value>
  </data>
  <data name="LeaveGuild" xml:space="preserve">
    <value>Makes the bot leave the guild. Settings will be preserved.</value>
  </data>
  <data name="MakeAnEmbed" xml:space="preserve">
    <value>Displays an embed with user supplied everything except fields.</value>
  </data>
  <data name="MessageBotOwner" xml:space="preserve">
    <value>Messages the bot owner.</value>
  </data>
  <data name="MessageRole" xml:space="preserve">
    <value>Mentions an unmentionable role with a message.</value>
  </data>
  <data name="Modify" xml:space="preserve">
    <value>Adds or removes a guild from the public guild list.</value>
  </data>
  <data name="ModifyActions" xml:space="preserve">
    <value>The server log will send messages when these events happen.</value>
  </data>
  <data name="ModifyBannedNames" xml:space="preserve">
    <value>Adds or removes banned names.</value>
  </data>
  <data name="ModifyBannedRegex" xml:space="preserve">
    <value>Adds or removes banned regex.</value>
  </data>
  <data name="ModifyBannedStrings" xml:space="preserve">
    <value>Adds or removes banned strings.</value>
  </data>
  <data name="ModifyBotIcon" xml:space="preserve">
    <value>Modifies the bot's icon.</value>
  </data>
  <data name="ModifyBotName" xml:space="preserve">
    <value>Modifies the bot's name.</value>
  </data>
  <data name="ModifyChannelBitRate" xml:space="preserve">
    <value>Modifies the bit rate on a voice channel.</value>
  </data>
  <data name="ModifyChannelLimit" xml:space="preserve">
    <value>Modifies the amount of people who can be in a voice channel.</value>
  </data>
  <data name="ModifyChannelName" xml:space="preserve">
    <value>Modifies a channel's name.</value>
  </data>
  <data name="ModifyChannelNsfw" xml:space="preserve">
    <value>Toggles the nsfw option on a channel.</value>
  </data>
  <data name="ModifyChannelPerms" xml:space="preserve">
    <value>Modifies the permission overwrites on a channel.</value>
  </data>
  <data name="ModifyChannelPosition" xml:space="preserve">
    <value>Modifies the position of a channel.</value>
  </data>
  <data name="ModifyChannelTopic" xml:space="preserve">
    <value>Modifies a channel's topic.</value>
  </data>
  <data name="ModifyCommands" xml:space="preserve">
    <value>Turns commands on and off.</value>
  </data>
  <data name="ModifyEmoteName" xml:space="preserve">
    <value>Modifies an emote name.</value>
  </data>
  <data name="ModifyEmoteRoles" xml:space="preserve">
    <value>Modifies the roles required to use an emote. Discord clients will need to be restarted before you can use the emote again.</value>
  </data>
  <data name="ModifyGoodbyeMessage" xml:space="preserve">
    <value>Modifies a message sent when a user leaves the server.</value>
  </data>
  <data name="ModifyGuildAfkChannel" xml:space="preserve">
    <value>Modifies which channel is the afk channel.</value>
  </data>
  <data name="ModifyGuildAfkTimer" xml:space="preserve">
    <value>Modifies how long it takes to get moved to the afk channel.</value>
  </data>
  <data name="ModifyGuildExplicitContentFilter" xml:space="preserve">
    <value>Modified the guild's explicit content filter level.</value>
  </data>
  <data name="ModifyGuildIcon" xml:space="preserve">
    <value>Modifies the guild's icon.</value>
  </data>
  <data name="ModifyGuildMsgNotif" xml:space="preserve">
    <value>Modifies the guild's default message notification setting.</value>
  </data>
  <data name="ModifyGuildName" xml:space="preserve">
    <value>Modifies the guild's name.</value>
  </data>
  <data name="ModifyGuildRegion" xml:space="preserve">
    <value>Modifies the guild's region.</value>
  </data>
  <data name="ModifyGuildSplash" xml:space="preserve">
    <value>Modifies the guild's splash.</value>
  </data>
  <data name="ModifyGuildSystemChannel" xml:space="preserve">
    <value>Modifies which channel is the system channel.</value>
  </data>
  <data name="ModifyGuildVerif" xml:space="preserve">
    <value>Modifies the guild's verification level.</value>
  </data>
  <data name="ModifyIgnoredChannels" xml:space="preserve">
    <value>Ignores all logging info that would have been gotten from a channel.</value>
  </data>
  <data name="ModifyIgnoredCommandChannels" xml:space="preserve">
    <value>The bot will ignore commands said on these channels. If a command is input then the bot will instead ignore only that command on the given channel.</value>
  </data>
  <data name="ModifyImageLog" xml:space="preserve">
    <value>Modifies which channel is designated as the image log.</value>
  </data>
  <data name="ModifyModLog" xml:space="preserve">
    <value>Modifies which channel is designated as the mod log.</value>
  </data>
  <data name="ModifyNickName" xml:space="preserve">
    <value>Modifies a user's nickname.</value>
  </data>
  <data name="ModifyPunishments" xml:space="preserve">
    <value>Adds or removes banned phrase punishments.</value>
  </data>
  <data name="ModifyQuotes" xml:space="preserve">
    <value>Adds the given text to a list that can be called through the SayQuote command</value>
  </data>
  <data name="ModifyRoleColor" xml:space="preserve">
    <value>Modifies a role color.</value>
  </data>
  <data name="ModifyRoleHoist" xml:space="preserve">
    <value>Modifies the hoist status of a role (whether is shows up in the user list separately).</value>
  </data>
  <data name="ModifyRoleMentionability" xml:space="preserve">
    <value>Modifies the mentionability status of a role.</value>
  </data>
  <data name="ModifyRoleName" xml:space="preserve">
    <value>Modifies a role name.</value>
  </data>
  <data name="ModifyRolePerms" xml:space="preserve">
    <value>Modifies the permissions a role has.</value>
  </data>
  <data name="ModifyRolePosition" xml:space="preserve">
    <value>Moves a role.</value>
  </data>
  <data name="ModifyRuleCategories" xml:space="preserve">
    <value>Modifies the categories which contain rules.</value>
  </data>
  <data name="ModifyRules" xml:space="preserve">
    <value>Modifies the rules which are saved in guild settings.</value>
  </data>
  <data name="ModifySelfRoles" xml:space="preserve">
    <value>Modifies self assignable roles.</value>
  </data>
  <data name="ModifyServerLog" xml:space="preserve">
    <value>Modifies which channel is designated as the server log.</value>
  </data>
  <data name="ModifyWebhookChannel" xml:space="preserve">
    <value>Changes the channel of a webhook.</value>
  </data>
  <data name="ModifyWebhookChannelChannel" xml:space="preserve">
    <value>The channel to move the webhook to.</value>
  </data>
  <data name="ModifyWebhookChannelWebhook" xml:space="preserve">
    <value>The webhook to move.</value>
  </data>
  <data name="ModifyWebhookIcon" xml:space="preserve">
    <value>Changes the icon of a webhook.</value>
  </data>
  <data name="ModifyWebhookIconUrl" xml:space="preserve">
    <value>A link to an image.</value>
  </data>
  <data name="ModifyWebhookIconWebhook" xml:space="preserve">
    <value>The webhook to modify the icon of.</value>
  </data>
  <data name="ModifyWebhookName" xml:space="preserve">
    <value>Changes the name of a webhook.</value>
  </data>
  <data name="ModifyWebhookNameName" xml:space="preserve">
    <value>The name to give the webhook.</value>
  </data>
  <data name="ModifyWebhookNameWebhook" xml:space="preserve">
    <value>The webhook to modify the name of.</value>
  </data>
  <data name="ModifyWelcomeMessage" xml:space="preserve">
    <value>Modifies a message sent when a user joins the server.</value>
  </data>
  <data name="MoveUser" xml:space="preserve">
    <value>Moves a user to a different voice channel.</value>
  </data>
  <data name="MoveUsers" xml:space="preserve">
    <value>Moves all users in a specific channel to a different voice channel.</value>
  </data>
  <data name="Mute" xml:space="preserve">
    <value>Prevents a user from typing and speaking in the guild.</value>
  </data>
  <data name="PreventRaid" xml:space="preserve">
    <value>Sets up a system protecting the guild from raiding.</value>
  </data>
  <data name="PreventSpam" xml:space="preserve">
    <value>Sets up a system protecting the guild from spam.</value>
  </data>
  <data name="PrintOutRules" xml:space="preserve">
    <value>Displays the rules with user specified formatting.</value>
  </data>
  <data name="PruneUsers" xml:space="preserve">
    <value>Removes all users who have no roles and have not been seen in a specified amount of days.</value>
  </data>
  <data name="Remind" xml:space="preserve">
    <value>Sends a message after a specified amount of time.</value>
  </data>
  <data name="RemindMe" xml:space="preserve">
    <value>Sends you a reminder after the specified time.</value>
  </data>
  <data name="RemoveAllNickNames" xml:space="preserve">
    <value>Removes the nicknames of every user.</value>
  </data>
  <data name="RemoveMessages" xml:space="preserve">
    <value>Removes the specified number of messages from a channel.</value>
  </data>
  <data name="ReplaceByUtf16" xml:space="preserve">
    <value>Gives all users who have any character in their name above a specified Utf16 limit a new nickname.</value>
  </data>
  <data name="ReplaceWordsInNames" xml:space="preserve">
    <value>Gives all users who have a specified string in their name or nickname a new nickname.</value>
  </data>
  <data name="ResetGuildSettings" xml:space="preserve">
    <value>Sets settings back to their default values.</value>
  </data>
  <data name="RestartBot" xml:space="preserve">
    <value>Restarts the bot.</value>
  </data>
  <data name="SayQuote" xml:space="preserve">
    <value>Shows the content for the given quote.</value>
  </data>
  <data name="ShowBotSettings" xml:space="preserve">
    <value>Shows information about the bot settings.</value>
  </data>
  <data name="ShowGuildSettings" xml:space="preserve">
    <value>Shows information about guild settings.</value>
  </data>
  <data name="SoftBan" xml:space="preserve">
    <value>Removes a user from the guild and deletes any recent messages from them.</value>
  </data>
  <data name="SoftDeleteChannel" xml:space="preserve">
    <value>Makes everyone except admins unable to see a channel.</value>
  </data>
  <data name="SoftDeleteRole" xml:space="preserve">
    <value>Deletes a role then creates a role with the exact same information.</value>
  </data>
  <data name="SpeakThroughWebhook" xml:space="preserve">
    <value>Sends a message through a webhook. Use this command if you're annoying.</value>
  </data>
  <data name="SpeakThroughWebhookText" xml:space="preserve">
    <value>The text to say through the webhook.</value>
  </data>
  <data name="SpeakThroughWebhookWebhook" xml:space="preserve">
    <value>The webhook to speak with.</value>
  </data>
  <data name="SwapGuildOwner" xml:space="preserve">
    <value>If the bot is the current owner of the guild, this command will give you owner.</value>
  </data>
  <data name="TakeRole" xml:space="preserve">
    <value>Takes roles from a user.</value>
  </data>
  <data name="Test" xml:space="preserve">
    <value>Mainly makes the bot say test.</value>
  </data>
  <data name="TestGuildNotifs" xml:space="preserve">
    <value>Sends the given guild notification in order to test it.</value>
  </data>
  <data name="Unban" xml:space="preserve">
    <value>Unbans the user from the guild.</value>
  </data>
  <data name="VoiceMute" xml:space="preserve">
    <value>Prevents a user from speaking in voice chat.</value>
  </data>
  <data name="GachaCharacter" xml:space="preserve">
    <value>Displays information about the specified character.</value>
  </data>
  <data name="GachaGive" xml:space="preserve">
    <value>Gifts a character to a different user.</value>
  </data>
  <data name="GachaHarem" xml:space="preserve">
    <value>Displays the characters you have claimed</value>
  </data>
  <data name="GachaRoll" xml:space="preserve">
    <value>Rolls a random character that you can claim.</value>
  </data>
  <data name="GachaSource" xml:space="preserve">
    <value>Displays information about the specified source.</value>
  </data>
  <data name="GachaTrade" xml:space="preserve">
    <value>Trade characters with a different user.</value>
  </data>
  <data name="LevelsShow" xml:space="preserve">
    <value>Displays the level of yourself or a different user.</value>
  </data>
  <data name="LevelsTop" xml:space="preserve">
    <value>Displays the highest leveled people in the server.</value>
  </data>
  <data name="ModifyCommandsEnable" xml:space="preserve">
    <value>Creates or modifies a command override to an 'allowed' state with the supplied priority on the specified entity. A higher priority is used first.</value>
  </data>
  <data name="ModifyCommandsDisable" xml:space="preserve">
    <value>Creates or modifies a command override to a 'disallowed' state with the supplied priority on the specified entity. A higher priority is used first.</value>
  </data>
  <data name="ModifyCommandsClear" xml:space="preserve">
    <value>Clears the command overrides on the specified entity.</value>
  </data>
  <data name="ModifyPersistentRoles" xml:space="preserve">
    <value>Adds or removes roles which stay on users if they leave and rejoin the guild.</value>
  </data>
  <data name="DisplayPersistentRoles" xml:space="preserve">
    <value>Displays the persistent roles which exist in this guild.</value>
  </data>
  <data name="GetLogCounters" xml:space="preserve">
    <value>Displays the count of each item being logged.</value>
  </data>
</root>